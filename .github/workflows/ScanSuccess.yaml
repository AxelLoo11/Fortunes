name: Scan success branch test
on:
  push: 
      branches:
      - 'v[0-9]+.[0-9]+'

jobs:
  scan:
    name: Scan
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Check Commit Message
        run: |
          if [[ "${{ github.event.head_commit.message }}" == "#NORUN"* ]]; then
            echo "Commit message starts with #NORUN. Skipping this workflow."
            exit 78  # Exit with a neutral status code to prevent the workflow from running.
          fi

      - name: Checkout code
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 1

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
            scan-type: 'fs'
            ignore-unfixed: true
            format: 'table'
            output: 'trivy-results.txt'
            severity: 'CRITICAL'  # if want to fail, add 'HIGH' in it

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1

      - name: Check the version of Cosign
        run: cosign version
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: docker_meta
        name: get the docker metadata
        uses: docker/metadata-action@v4.4.0
        with:
          images: alexis11v/adlc3ca
          tags: v2
              
      - name: Build and push the image to docker hub
        id: build-and-push
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags}}
      
      # cosign sign --key cosign.key alexis11v/adlc3ca:v1@sha256:8af31f28d879bff0392993f3acb4c01c0971784780e688ab7ba186c665a7a523
      # cosign sign --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
      - name: Sign image with a key (in PEM format)
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}

      # cosign verify --key cosign.pub alexis11v/adlc3ca:v1@sha256:8af31f28d879bff0392993f3acb4c01c0971784780e688ab7ba186c665a7a523
      - name: Verify Cosign signature
        run: |
          cosign verify --key cosign.pub "${DIGEST}"
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}